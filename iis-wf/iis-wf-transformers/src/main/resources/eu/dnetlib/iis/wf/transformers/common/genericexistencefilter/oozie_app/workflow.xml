<workflow-app xmlns="uri:oozie:workflow:0.4" name="generic_existencefilter">
    <parameters>
        <property>
            <name>input</name>
            <description>input avro datastore, record needs to be identified with ${input_id_field_name} field defined as another property</description>
        </property>
        <property>
            <name>input_class_name</name>
            <description>input avro records class name</description>
        </property>
        <property>
            <name>input_existent_id</name>
            <description>ids of documents existent in OA+</description>
        </property>
        <property>
            <name>input_id_field_name</name>
            <value>id</value>
            <description>input record identifier field name to be matched with records from input_existent_id</description>
        </property>
        <property>
            <name>output_matched</name>
            <description>matched records from input</description>
        </property>
        <property>
            <name>output_unmatched</name>
            <description>unmatched records from input</description>
        </property>
        <property>
            <name>output_report</name>
            <description>report output path</description>
        </property>
        <property>
            <name>matched_records_counter_name</name>
            <value>$UNDEFINED$</value>
            <description>counter name of the metric reflecting the number of matched records, disabled when set to $UNDEFINED$</description>
        </property>
        <property>
            <name>sparkExecutorMemory</name>
            <description>memory for individual executor</description>
        </property>
        <property>
            <name>sparkExecutorCores</name>
            <description>number of cores used by single executor</description>
        </property>
        <property>
            <name>sparkDriverMemory</name>
            <description>memory for driver process</description>
        </property>
        <property>
            <name>oozieActionShareLibForSpark2</name>
            <description>oozie action sharelib for spark 2.*</description>
        </property>
        <property>
            <name>spark2ExtraListeners</name>
            <value>com.cloudera.spark.lineage.NavigatorAppListener</value>
            <description>spark 2.* extra listeners classname</description>
        </property>
        <property>
            <name>spark2SqlQueryExecutionListeners</name>
            <value>com.cloudera.spark.lineage.NavigatorQueryListener</value>
            <description>spark 2.* sql query execution listeners classname</description>
        </property>
        <property>
            <name>spark2YarnHistoryServerAddress</name>
            <description>spark 2.* yarn history server address</description>
        </property>
        <property>
            <name>spark2EventLogDir</name>
            <description>spark 2.* event log dir location</description>
        </property>
    </parameters>
     
    <global>
        <job-tracker>${jobTracker}</job-tracker>
        <name-node>${nameNode}</name-node>
        <configuration>
            <property>
                <name>mapreduce.job.queuename</name>
                <value>${queueName}</value>
            </property>
            <property>
                <name>oozie.launcher.mapred.job.queue.name</name>
                <value>${oozieLauncherQueueName}</value>
            </property>
            <property>
                <name>oozie.action.sharelib.for.spark</name>
                <value>${oozieActionShareLibForSpark2}</value>
            </property>
        </configuration>
    </global>
    
    <start to="filter"/>
	
	<action name="filter">
        <spark xmlns="uri:oozie:spark-action:0.2">
            <master>yarn-cluster</master>
            <mode>cluster</mode>
            <name>generic-existence-filter-job</name>
            <class>eu.dnetlib.iis.wf.transformers.common.genericexistencefilter.GenericExistenceFilterJob</class>
            <jar>${oozieTopWfApplicationPath}/lib/iis-wf-transformers-${projectVersion}.jar</jar>
            <spark-opts>
                --executor-memory=${sparkExecutorMemory}
                --executor-cores=${sparkExecutorCores}
                --driver-memory=${sparkDriverMemory}
                --conf spark.extraListeners=${spark2ExtraListeners}
                --conf spark.sql.queryExecutionListeners=${spark2SqlQueryExecutionListeners}
                --conf spark.yarn.historyServer.address=${spark2YarnHistoryServerAddress}
                --conf spark.eventLog.dir=${nameNode}${spark2EventLogDir}
            </spark-opts>
            <arg>-input=${input}</arg>
            <arg>-inputIdFieldName=${input_id_field_name}</arg>
            <arg>-inputClassName=${input_class_name}</arg>
            <arg>-inputExistentId=${input_existent_id}</arg>
            <arg>-matchedRecordsCounterName=${matched_records_counter_name}</arg>
            <arg>-outputMatched=${output_matched}</arg>
            <arg>-outputUnmatched=${output_unmatched}</arg>
            <arg>-outputReport=${output_report}</arg>
        </spark>
	   <ok to="end"/>
        <error to="fail"/>
    </action>
    
    <kill name="fail">
        <message>Unfortunately, the workflow failed -- error message:
            [${wf:errorMessage(wf:lastErrorNode())}]</message>
    </kill>
    
    <end name="end"/>
    
</workflow-app>
