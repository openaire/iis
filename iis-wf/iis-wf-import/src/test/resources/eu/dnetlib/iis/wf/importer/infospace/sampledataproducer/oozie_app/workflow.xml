<workflow-app xmlns="uri:oozie:workflow:0.4" name="test-importer_infospace_sampledataproducer">

    <global>
        <job-tracker>${jobTracker}</job-tracker>
        <name-node>${nameNode}</name-node>
        <configuration>
            <property>
                <name>mapreduce.job.queuename</name>
                <value>${queueName}</value>
            </property>
            <property>
                <name>oozie.launcher.mapred.job.queue.name</name>
                <value>${oozieLauncherQueueName}</value>
            </property>
        </configuration>
    </global>

    <start to="copy_materialized_graph_json_resources_fork" />
    
    <fork name="copy_materialized_graph_json_resources_fork">
        <path start="copy_materialized_graph_json_resources_publication" />
        <path start="copy_materialized_graph_json_resources_dataset" />
        <path start="copy_materialized_graph_json_resources_organization" />
        <path start="copy_materialized_graph_json_resources_project" />
        <path start="copy_materialized_graph_json_resources_otherresearchproduct" />
        <path start="copy_materialized_graph_json_resources_software" />
        <path start="copy_materialized_graph_json_resources_relation" />
        <path start="copy_materialized_graph_json_resources_datasource" />
    </fork>
    
    <action name="copy_materialized_graph_json_resources_publication">
        <java>
            <prepare>
                <delete path="${nameNode}${workingDir}/input_graph/publication" />
                <mkdir path="${nameNode}${workingDir}/input_graph/publication" />
            </prepare>
            <main-class>eu.dnetlib.iis.common.java.ProcessWrapper</main-class>
            <arg>eu.dnetlib.iis.common.java.jsonworkflownodes.ClassPathResourceToHdfsCopier</arg>
            <arg>-PinputClasspathResource=eu/dnetlib/iis/wf/importer/infospace/input/graph/publication.json</arg>
            <arg>-PoutputHdfsFileLocation=${workingDir}/input_graph/publication/data.json</arg>
        </java>
        <ok to="copy_materialized_graph_json_resources_join"/>
        <error to="fail"/>
    </action>
    
    <action name="copy_materialized_graph_json_resources_dataset">
        <java>
            <prepare>
                <delete path="${nameNode}${workingDir}/input_graph/dataset" />
                <mkdir path="${nameNode}${workingDir}/input_graph/dataset" />
            </prepare>
            <main-class>eu.dnetlib.iis.common.java.ProcessWrapper</main-class>
            <arg>eu.dnetlib.iis.common.java.jsonworkflownodes.ClassPathResourceToHdfsCopier</arg>
            <arg>-PinputClasspathResource=eu/dnetlib/iis/wf/importer/infospace/input/graph/dataset.json</arg>
            <arg>-PoutputHdfsFileLocation=${workingDir}/input_graph/dataset/data.json</arg>
        </java>
        <ok to="copy_materialized_graph_json_resources_join"/>
        <error to="fail"/>
    </action>
    
    <action name="copy_materialized_graph_json_resources_organization">
        <java>
            <prepare>
                <delete path="${nameNode}${workingDir}/input_graph/organization" />
                <mkdir path="${nameNode}${workingDir}/input_graph/organization" />
            </prepare>
            <main-class>eu.dnetlib.iis.common.java.ProcessWrapper</main-class>
            <arg>eu.dnetlib.iis.common.java.jsonworkflownodes.ClassPathResourceToHdfsCopier</arg>
            <arg>-PinputClasspathResource=eu/dnetlib/iis/wf/importer/infospace/input/graph/organization.json</arg>
            <arg>-PoutputHdfsFileLocation=${workingDir}/input_graph/organization/data.json</arg>
        </java>
        <ok to="copy_materialized_graph_json_resources_join"/>
        <error to="fail"/>
    </action>
    
    <action name="copy_materialized_graph_json_resources_project">
        <java>
            <prepare>
                <delete path="${nameNode}${workingDir}/input_graph/project" />
                <mkdir path="${nameNode}${workingDir}/input_graph/project" />
            </prepare>
            <main-class>eu.dnetlib.iis.common.java.ProcessWrapper</main-class>
            <arg>eu.dnetlib.iis.common.java.jsonworkflownodes.ClassPathResourceToHdfsCopier</arg>
            <arg>-PinputClasspathResource=eu/dnetlib/iis/wf/importer/infospace/input/graph/project.json</arg>
            <arg>-PoutputHdfsFileLocation=${workingDir}/input_graph/project/data.json</arg>
        </java>
        <ok to="copy_materialized_graph_json_resources_join"/>
        <error to="fail"/>
    </action>
    
    <action name="copy_materialized_graph_json_resources_otherresearchproduct">
        <java>
            <prepare>
                <delete path="${nameNode}${workingDir}/input_graph/otherresearchproduct" />
                <mkdir path="${nameNode}${workingDir}/input_graph/otherresearchproduct" />
            </prepare>
            <main-class>eu.dnetlib.iis.common.java.ProcessWrapper</main-class>
            <arg>eu.dnetlib.iis.common.java.jsonworkflownodes.ClassPathResourceToHdfsCopier</arg>
            <arg>-PinputClasspathResource=eu/dnetlib/iis/wf/importer/infospace/input/graph/otherresearchproduct.json</arg>
            <arg>-PoutputHdfsFileLocation=${workingDir}/input_graph/otherresearchproduct/data.json</arg>
        </java>
        <ok to="copy_materialized_graph_json_resources_join"/>
        <error to="fail"/>
    </action>
    
    <action name="copy_materialized_graph_json_resources_software">
        <java>
            <prepare>
                <delete path="${nameNode}${workingDir}/input_graph/software" />
                <mkdir path="${nameNode}${workingDir}/input_graph/software" />
            </prepare>
            <main-class>eu.dnetlib.iis.common.java.ProcessWrapper</main-class>
            <arg>eu.dnetlib.iis.common.java.jsonworkflownodes.ClassPathResourceToHdfsCopier</arg>
            <arg>-PinputClasspathResource=eu/dnetlib/iis/wf/importer/infospace/input/graph/software.json</arg>
            <arg>-PoutputHdfsFileLocation=${workingDir}/input_graph/software/data.json</arg>
        </java>
        <ok to="copy_materialized_graph_json_resources_join"/>
        <error to="fail"/>
    </action>
    
    <action name="copy_materialized_graph_json_resources_relation">
        <java>
            <prepare>
                <delete path="${nameNode}${workingDir}/input_graph/relation" />
                <mkdir path="${nameNode}${workingDir}/input_graph/relation" />
            </prepare>
            <main-class>eu.dnetlib.iis.common.java.ProcessWrapper</main-class>
            <arg>eu.dnetlib.iis.common.java.jsonworkflownodes.ClassPathResourceToHdfsCopier</arg>
            <arg>-PinputClasspathResource=eu/dnetlib/iis/wf/importer/infospace/input/graph/relation.json</arg>
            <arg>-PoutputHdfsFileLocation=${workingDir}/input_graph/relation/data.json</arg>
        </java>
        <ok to="copy_materialized_graph_json_resources_join"/>
        <error to="fail"/>
    </action>
    
    <action name="copy_materialized_graph_json_resources_datasource">
        <java>
            <prepare>
                <delete path="${nameNode}${workingDir}/input_graph/datasource" />
                <mkdir path="${nameNode}${workingDir}/input_graph/datasource" />
            </prepare>
            <main-class>eu.dnetlib.iis.common.java.ProcessWrapper</main-class>
            <arg>eu.dnetlib.iis.common.java.jsonworkflownodes.ClassPathResourceToHdfsCopier</arg>
            <arg>-PinputClasspathResource=eu/dnetlib/iis/wf/importer/infospace/input/graph/datasource.json</arg>
            <arg>-PoutputHdfsFileLocation=${workingDir}/input_graph/datasource/data.json</arg>
        </java>
        <ok to="copy_materialized_graph_json_resources_join"/>
        <error to="fail"/>
    </action>
    
    <join name="copy_materialized_graph_json_resources_join" to="importer" />
    
    <action name="importer">
        <sub-workflow>
            <app-path>${wf:appPath()}/infospace_import</app-path>
            <propagate-configuration />
            <configuration>
                <property>
                    <name>skip_deleted_by_inference</name>
                    <value>true</value>
                </property>
                <property>
                    <name>inference_provenance_blacklist</name>
                    <value>iis</value>
                </property>
                <property>
                    <name>trust_level_threshold</name>
                    <value>0.7</value>
                </property>
                <property>
                    <name>input_root_path</name>
                    <value>${workingDir}/input_graph/</value>
                </property>
                <property>
                    <name>input_format</name>
                    <value>json</value>
                </property>
                <property>
                    <name>max_description_length</name>
                    <value>1000</value>
                </property>
                <property>
                    <name>max_titles_size</name>
                    <value>1</value>
                </property>
                <property>
                    <name>max_title_length</name>
                    <value>75</value>
                </property>
                <property>
                    <name>max_authors_size</name>
                    <value>25</value>
                </property>
                <property>
                    <name>max_author_fullname_length</name>
                    <value>25</value>
                </property>
                <property>
                    <name>max_keywords_size</name>
                    <value>5</value>
                </property>
                <property>
                    <name>max_keyword_length</name>
                    <value>15</value>
                </property>
                <property>
                    <name>eligible_service_collectedfrom_datasourceid</name>
                    <value>10|openaire____::2e06c1122c7df43765fdcf91080824fa</value>
                </property>
                <property>
                    <name>output</name>
                    <value>${workingDir}/imported</value>
                </property>
                <property>
                    <name>output_report_root_path</name>
                    <value>${workingDir}/report</value>
                </property>
                <property>
                    <name>output_report_relative_path</name>
                    <value>import_infospace</value>
                </property>
                <property>
                    <name>sparkExecutorOverhead</name>
                    <value>512</value>
                </property>
            </configuration>
        </sub-workflow>

        <ok to="forking" />

        <error to="fail" />
    </action>

    <fork name="forking">
        <path start="consumer-identifiermapping" />
        <path start="consumer-docproject" />
        <path start="consumer-document" />
        <path start="consumer-dataset" />
        <path start="consumer-project" />
        <path start="consumer-organization" />
        <path start="consumer-service" />
        <path start="consumer-projectorg" />
        <path start="consumer-report" />
    </fork>

    <action name="consumer-identifiermapping">
        <java>
            <main-class>eu.dnetlib.iis.common.java.ProcessWrapper</main-class>
            <arg>eu.dnetlib.iis.common.java.jsonworkflownodes.TestingConsumer</arg>
            <arg>-C{identifiermapping,
                eu.dnetlib.iis.common.schemas.IdentifierMapping,
                eu/dnetlib/iis/wf/importer/infospace/output/identifiermapping.json}
            </arg>
            <arg>-Iidentifiermapping=${workingDir}/imported/identifiermapping</arg>
        </java>
        <ok to="joining" />
        <error to="fail" />
    </action>

    <action name="consumer-docproject">
        <java>
            <main-class>eu.dnetlib.iis.common.java.ProcessWrapper</main-class>
            <arg>eu.dnetlib.iis.common.java.jsonworkflownodes.TestingConsumer</arg>
            <arg>-C{docproject,
                eu.dnetlib.iis.importer.schemas.DocumentToProject,
                eu/dnetlib/iis/wf/importer/infospace/output/docproject.json}
            </arg>
            <arg>-Idocproject=${workingDir}/imported/docproject</arg>
        </java>
        <ok to="joining" />
        <error to="fail" />
    </action>

    <action name="consumer-project">
        <java>
            <main-class>eu.dnetlib.iis.common.java.ProcessWrapper</main-class>
            <arg>eu.dnetlib.iis.common.java.jsonworkflownodes.TestingConsumer</arg>
            <arg>-C{project,
                eu.dnetlib.iis.importer.schemas.Project,
                eu/dnetlib/iis/wf/importer/infospace/output/project.json}
            </arg>
            <arg>-Iproject=${workingDir}/imported/project</arg>
        </java>
        <ok to="joining" />
        <error to="fail" />
    </action>

    <action name="consumer-document">
        <java>
            <main-class>eu.dnetlib.iis.common.java.ProcessWrapper</main-class>
            <arg>eu.dnetlib.iis.common.java.jsonworkflownodes.TestingConsumer</arg>
            <arg>-C{document,
                eu.dnetlib.iis.importer.schemas.DocumentMetadata,
                eu/dnetlib/iis/wf/importer/infospace/output/document.json}
            </arg>
            <arg>-Idocument=${workingDir}/imported/docmeta</arg>
        </java>
        <ok to="joining" />
        <error to="fail" />
    </action>
    
    <action name="consumer-dataset">
        <java>
            <main-class>eu.dnetlib.iis.common.java.ProcessWrapper</main-class>
            <arg>eu.dnetlib.iis.common.java.jsonworkflownodes.TestingConsumer</arg>
            <arg>-C{document,
                eu.dnetlib.iis.importer.schemas.DataSetReference,
                eu/dnetlib/iis/wf/importer/infospace/output/dataset.json}
            </arg>
            <arg>-Idocument=${workingDir}/imported/dataset</arg>
        </java>
        <ok to="joining" />
        <error to="fail" />
    </action>

    <action name="consumer-organization">
        <java>
            <main-class>eu.dnetlib.iis.common.java.ProcessWrapper</main-class>
            <arg>eu.dnetlib.iis.common.java.jsonworkflownodes.TestingConsumer</arg>
            <arg>-C{organization,
                eu.dnetlib.iis.importer.schemas.Organization,
                eu/dnetlib/iis/wf/importer/infospace/output/organization.json}
            </arg>
            <arg>-Iorganization=${workingDir}/imported/organization</arg>
        </java>
        <ok to="joining" />
        <error to="fail" />
    </action>

	<action name="consumer-service">
        <java>
            <main-class>eu.dnetlib.iis.common.java.ProcessWrapper</main-class>
            <arg>eu.dnetlib.iis.common.java.jsonworkflownodes.TestingConsumer</arg>
            <arg>-C{service,
                eu.dnetlib.iis.importer.schemas.Service,
                eu/dnetlib/iis/wf/importer/infospace/output/service.json}
            </arg>
            <arg>-Iservice=${workingDir}/imported/service</arg>
        </java>
        <ok to="joining" />
        <error to="fail" />
    </action>

    <action name="consumer-projectorg">
        <java>
            <main-class>eu.dnetlib.iis.common.java.ProcessWrapper</main-class>
            <arg>eu.dnetlib.iis.common.java.jsonworkflownodes.TestingConsumer</arg>
            <arg>-C{projectorg,
                eu.dnetlib.iis.importer.schemas.ProjectToOrganization,
                eu/dnetlib/iis/wf/importer/infospace/output/project_organization.json}
            </arg>
            <arg>-Iprojectorg=${workingDir}/imported/projectorg</arg>
        </java>
        <ok to="joining" />
        <error to="fail" />
    </action>

    <action name="consumer-report">
        <java>
            <main-class>eu.dnetlib.iis.common.java.ProcessWrapper</main-class>
            <arg>eu.dnetlib.iis.common.java.jsonworkflownodes.TestingConsumer</arg>
            <arg>-C{report,eu.dnetlib.iis.common.schemas.ReportEntry,eu/dnetlib/iis/wf/importer/infospace/output/report.json}</arg>
            <arg>-Ireport=${workingDir}/report/import_infospace</arg>
        </java>
        <ok to="joining" />
        <error to="fail" />
    </action>

    <join name="joining" to="end" />

    <kill name="fail">
        <message>Unfortunately, the process failed -- error message:
            [${wf:errorMessage(wf:lastErrorNode())}]
        </message>
    </kill>
    <end name="end" />
</workflow-app>
