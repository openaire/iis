<workflow-app xmlns="uri:oozie:workflow:0.4" name="test-primary_processing_sampledataproducer">

	<global>
		<job-tracker>${jobTracker}</job-tracker>
		<name-node>${nameNode}</name-node>
		<configuration>
			<property>
				<name>mapreduce.job.queuename</name>
				<value>${queueName}</value>
			</property>
		</configuration>
	</global>

	<start to="generate-schema" />

	<action name="generate-schema">
		<java>
			<main-class>eu.dnetlib.iis.common.javamapreduce.hack.AvroSchemaGenerator</main-class>
			<arg>eu.dnetlib.iis.metadataextraction.schemas.DocumentText</arg>
			<arg>org.apache.avro.Schema.Type.NULL</arg>
			<capture-output />
		</java>
		<ok to="producer" />
		<error to="fail" />
	</action>

	<action name="producer">
		<java>
			<!-- The data generated by this node is deleted in this section -->
			<prepare>
				<delete path="${nameNode}${workingDir}/producer" />
				<mkdir path="${nameNode}${workingDir}/producer" />
			</prepare>
			<!-- This is simple wrapper for the Java code -->
			<main-class>eu.dnetlib.iis.common.java.ProcessWrapper</main-class>
			<arg>eu.dnetlib.iis.common.java.jsonworkflownodes.Producer</arg>
			<arg>-C{document_metadata,
				eu.dnetlib.iis.importer.schemas.DocumentMetadata,
				eu/dnetlib/iis/wf/primary/processing/sampledataproducer/input/meta/document_metadata.json}
			</arg>
			<arg>-C{document_to_project,
				eu.dnetlib.iis.importer.schemas.DocumentToProject,
				eu/dnetlib/iis/wf/primary/processing/sampledataproducer/input/meta/document_to_project.json}
			</arg>
			<arg>-C{project_to_organization,
				eu.dnetlib.iis.importer.schemas.ProjectToOrganization,
				eu/dnetlib/iis/wf/primary/processing/sampledataproducer/input/meta/project_to_organization.json}
			</arg>
			<arg>-C{organization,
				eu.dnetlib.iis.importer.schemas.Organization,
				eu/dnetlib/iis/wf/primary/processing/sampledataproducer/input/meta/organization.json}
			</arg>
			<arg>-C{project,
				eu.dnetlib.iis.importer.schemas.Project,
				eu/dnetlib/iis/wf/primary/processing/sampledataproducer/input/meta/project.json}
			</arg>
			<arg>-C{service,
				eu.dnetlib.iis.importer.schemas.Service,
				eu/dnetlib/iis/wf/primary/processing/sampledataproducer/input/meta/service.json}
			</arg>
			<arg>-C{project_concept,
				eu.dnetlib.iis.importer.schemas.Concept,
				eu/dnetlib/iis/wf/primary/processing/sampledataproducer/input/meta/concept.json}
			</arg>
			<arg>-C{dataset,
				eu.dnetlib.iis.importer.schemas.DataSetReference,
				eu/dnetlib/iis/wf/primary/processing/sampledataproducer/input/meta/dataset.json}
			</arg>
			<arg>-C{extracted_document_metadata,
				eu.dnetlib.iis.metadataextraction.schemas.ExtractedDocumentMetadata,
				eu/dnetlib/iis/wf/primary/processing/sampledataproducer/input/metadataextraction/extracted_document_metadata.json}
			</arg>
			<arg>-C{document_text_wos,
				eu.dnetlib.iis.metadataextraction.schemas.DocumentText,
				eu/dnetlib/iis/common/data/empty.json}
			</arg>
			<arg>-C{document_text_classpath,
				eu.dnetlib.iis.common.schemas.DocumentContentClasspath,
				eu/dnetlib/iis/wf/primary/processing/sampledataproducer/input/metadataextraction/document_text_classpath.json}
			</arg>
             <arg>-C{softwareheritage_origins, 
                eu.dnetlib.iis.referenceextraction.softwareurl.schemas.SoftwareHeritageOrigin,
                eu/dnetlib/iis/wf/primary/processing/sampledataproducer/input/meta/sh_origins.json}
            </arg>
			<arg>-C{patent,
				eu.dnetlib.iis.referenceextraction.patent.schemas.ImportedPatent,
				eu/dnetlib/iis/wf/primary/processing/sampledataproducer/input/meta/patent.json}
			</arg>
			<arg>-Odocument_metadata=${workingDir}/producer/document_metadata</arg>
			<arg>-Odocument_to_project=${workingDir}/producer/document_to_project</arg>
			<arg>-Oproject_to_organization=${workingDir}/producer/project_to_organization</arg>
			<arg>-Oorganization=${workingDir}/producer/organization</arg>
			<arg>-Oproject=${workingDir}/producer/project</arg>
			<arg>-Oservice=${workingDir}/producer/service</arg>
			<arg>-Oproject_concept=${workingDir}/producer/project_concept</arg>
			<arg>-Odataset=${workingDir}/producer/dataset</arg>
			<arg>-Oextracted_document_metadata=${workingDir}/producer/extracted_document_metadata</arg>
			<arg>-Odocument_text_wos=${workingDir}/producer/document_text_wos</arg>
			<arg>-Odocument_text_classpath=${workingDir}/producer/document_text_classpath</arg>
            <arg>-Osoftwareheritage_origins=${workingDir}/producer/softwareheritage_origins</arg>
			<arg>-Opatent=${workingDir}/producer/patent</arg>
		</java>
		<ok to="document_text_producer" />
		<error to="fail" />
	</action>

	<action name="document_text_producer">
		<map-reduce>
			<prepare>
				<delete path="${nameNode}${workingDir}/text-producer" />
				<mkdir path="${nameNode}${workingDir}/text-producer" />
			</prepare>
			<configuration>
				<property>
					<name>mapreduce.job.inputformat.class</name>
					<value>org.apache.avro.mapreduce.AvroKeyInputFormat</value>
				</property>
				<property>
					<name>mapreduce.job.outputformat.class</name>
					<value>org.apache.avro.mapreduce.AvroKeyOutputFormat</value>
				</property>
				<property>
					<name>mapreduce.map.output.key.class</name>
					<value>org.apache.avro.mapred.AvroKey</value>
				</property>
				<property>
					<name>mapreduce.map.output.value.class</name>
					<value>org.apache.hadoop.io.NullWritable</value>
				</property>
				<property>
					<name>mapreduce.job.reduces</name>
					<value>0</value>
				</property>
				<property>
					<name>mapreduce.job.output.key.class</name>
					<value>org.apache.avro.mapred.AvroKey</value>
				</property>
				<property>
					<name>mapreduce.job.output.value.class</name>
					<value>org.apache.avro.mapred.AvroValue</value>
				</property>
				<property>
					<name>mapreduce.job.output.key.comparator.class</name>
					<value>org.apache.avro.hadoop.io.AvroKeyComparator</value>
				</property>
				<property>
					<name>io.serializations</name>
					<value>org.apache.hadoop.io.serializer.WritableSerialization,org.apache.hadoop.io.serializer.avro.AvroSpecificSerialization,org.apache.hadoop.io.serializer.avro.AvroReflectSerialization,org.apache.avro.hadoop.io.AvroSerialization
					</value>
				</property>
				<property>
					<name>mapreduce.job.output.group.comparator.class</name>
					<value>org.apache.avro.hadoop.io.AvroKeyComparator</value>
				</property>
				<property>
					<name>rpc.engine.org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolPB
					</name>
					<value>org.apache.hadoop.ipc.ProtobufRpcEngine</value>
				</property>
				<property>
					<name>mapred.mapper.new-api</name>
					<value>true</value>
				</property>
				<property>
					<name>mapred.reducer.new-api</name>
					<value>true</value>
				</property>
				<property>
					<name>mapreduce.job.map.class</name>
					<value>eu.dnetlib.iis.common.utils.DocumentClasspathToTextConverter</value>
				</property>

				<property>
					<name>avro.serialization.key.reader.schema</name>
					<value>${wf:actionData('generate-schema')['eu.dnetlib.iis.metadataextraction.schemas.DocumentText']}</value>
				</property>
				<property>
					<name>avro.serialization.key.writer.schema</name>
					<value>${wf:actionData('generate-schema')['eu.dnetlib.iis.metadataextraction.schemas.DocumentText']}</value>
				</property>
				<property>
					<name>avro.serialization.value.reader.schema</name>
					<value>${wf:actionData('generate-schema')['org.apache.avro.Schema.Type.NULL']}</value>
				</property>
				<property>
					<name>avro.serialization.value.writer.schema</name>
					<value>${wf:actionData('generate-schema')['org.apache.avro.Schema.Type.NULL']}</value>
				</property>
				<property>
					<name>avro.schema.output.key</name>
					<value>${wf:actionData('generate-schema')['eu.dnetlib.iis.metadataextraction.schemas.DocumentText']}</value>
				</property>

				<property>
					<name>mapreduce.input.fileinputformat.inputdir</name>
					<value>${workingDir}/producer/document_text_classpath</value>
				</property>
				<property>
					<name>mapreduce.output.fileoutputformat.outputdir</name>
					<value>${workingDir}/text-producer/document_text</value>
				</property>
			</configuration>
		</map-reduce>
		<ok to="primary_processing" />
		<error to="fail" />
	</action>

	<action name="primary_processing">
		<sub-workflow>
			<app-path>${wf:appPath()}/primary_processing</app-path>
			<propagate-configuration />
			<configuration>
				<property>
					<name>active_referenceextraction_project</name>
					<value>true</value>
				</property>
				<property>
					<name>active_referenceextraction_dataset</name>
					<value>true</value>
				</property>
				<property>
					<name>active_referenceextraction_researchinitiative</name>
					<value>true</value>
				</property>
                <property>
                    <name>active_referenceextraction_community</name>
                    <value>true</value>
                </property>
                <property>
                    <name>active_referenceextraction_software_url</name>
                    <value>true</value>
                </property>
				<property>
					<name>active_referenceextraction_patent</name>
					<value>true</value>
				</property>
				<property>
					<name>active_referenceextraction_pdb</name>
					<value>false</value>
				</property>
                <property>
                    <name>active_referenceextraction_covid19</name>
                    <value>true</value>
                </property>
                <property>
                    <name>active_referenceextraction_eoscservice</name>
                    <value>true</value>
                </property>
				<property>
					<name>active_documentsclassification</name>
					<value>true</value>
				</property>
				<property>
					<name>active_citationmatching</name>
					<value>true</value>
				</property>
				<property>
					<name>active_document_affiliation</name>
					<value>true</value>
				</property>
				<property>
					<name>active_documentssimilarity</name>
					<value>false</value>
				</property>
				<property>
					<name>input_document_metadata</name>
					<value>${workingDir}/producer/document_metadata</value>
				</property>
				<property>
					<name>input_document_to_project</name>
					<value>${workingDir}/producer/document_to_project</value>
				</property>
				<property>
					<name>input_project_to_organization</name>
					<value>${workingDir}/producer/project_to_organization</value>
				</property>
				<property>
					<name>input_document_text</name>
					<value>${workingDir}/text-producer/document_text</value>
				</property>
				<property>
					<name>input_document_text_wos</name>
					<value>${workingDir}/producer/document_text_wos</value>
				</property>
				<property>
					<name>input_project</name>
					<value>${workingDir}/producer/project</value>
				</property>
				<property>
					<name>input_service</name>
					<value>${workingDir}/producer/service</value>
				</property>
				<property>
					<name>input_concept</name>
					<value>${workingDir}/producer/project_concept</value>
				</property>
				<property>
					<name>input_organizations</name>
					<value>${workingDir}/producer/organization</value>
				</property>
				<property>
					<name>input_dataset</name>
					<value>${workingDir}/producer/dataset</value>
				</property>
				<property>
					<name>input_extracted_document_metadata</name>
					<value>${workingDir}/producer/extracted_document_metadata</value>
				</property>
                <property>
                    <name>input_softwareheritage_origins</name>
                    <value>${workingDir}/producer/softwareheritage_origins</value>
                </property>
				<property>
					<name>input_patent</name>
					<value>${workingDir}/producer/patent</value>
				</property>
                <property>
                    <name>output_merged_metadata</name>
                    <value>${workingDir}/transformers_metadatamerger/output_merged_metadata</value>
                </property>
				<property>
					<name>output_document_to_project</name>
					<value>${workingDir}/exported/document_to_project</value>
				</property>
				<property>
					<name>output_document_to_dataset</name>
					<value>${workingDir}/exported/document_to_dataset</value>
				</property>
				<property>
					<name>output_document_to_research_initiatives</name>
					<value>${workingDir}/exported/document_to_research_initiatives</value>
				</property>
				<property>
					<name>output_document_to_community</name>
					<value>${workingDir}/exported/document_to_community</value>
				</property>
                <property>
                    <name>output_document_to_software_url</name>
                    <value>${workingDir}/exported/document_to_software_url_with_meta</value>
                </property>
				<property>
					<name>output_document_to_patent</name>
					<value>${workingDir}/exported/document_to_patent</value>
				</property>
                <property>
                    <name>output_patent_metadata</name>
                    <value>${workingDir}/exported/patent_metadata</value>
                </property>
				<property>
					<name>output_document_to_pdb</name>
					<value>${workingDir}/exported/document_to_pdb</value>
				</property>
                <property>
                    <name>output_document_to_covid19</name>
                    <value>${workingDir}/exported/document_to_covid19</value>
                </property>
                <property>
                    <name>output_document_to_service</name>
                    <value>${workingDir}/exported/document_to_service</value>
                </property>
				<property>
					<name>output_document_to_document_classes</name>
					<value>${workingDir}/exported/document_to_document_classes</value>
				</property>
				<property>
					<name>output_citation</name>
					<value>${workingDir}/exported/citation</value>
				</property>
				<property>
					<name>output_document_similarity</name>
					<value>${workingDir}/exported/document_similarity</value>
				</property>
				<property>
					<name>output_matched_doc_organizations</name>
					<value>${workingDir}/exported/matched_affiliation</value>
				</property>
                <property>
                    <name>output_report_root_path</name>
                    <value>${workingDir}/report</value>
                </property>
                <!-- sparkDriverMemory, sparkExecutorMemory, sparkExecutorCores are provided by environment (since git#889) -->
                <property>
                    <name>citationmatchingDirectPmcIdsMappingCSV</name>
                    <value>$UNDEFINED$</value>
                </property>
                <property>
                    <name>citationmatchingFuzzySparkDriverOverhead</name>
                    <value>512</value>
                </property>
                <property>
                    <name>citationmatchingFuzzySparkExecutorOverhead</name>
                    <value>512</value>
                </property>
				<property>
					<name>citationmatchingFuzzyNumberOfPartitions</name>
					<value>1000</value>
				</property>
				<property>
                    <name>citationmatchingFuzzyCacheLocation</name>
                    <value>${workingDir}/cache/citationmatching</value>
                </property>
                <property>
                    <name>citationmatchingCacheLockManagerFactoryClassName</name>
                    <value>eu.dnetlib.iis.common.lock.LockManagerFactoryMock</value>
                </property>
                <property>
                    <name>researchInitiativeReferenceExtractionSparkExecutorOverhead</name>
                    <value>512</value>
                </property>
                <property>
                    <name>dataset_datacite_sqlite_builder_java_opts</name>
                    <value>-Xmx1g</value>
                </property>
				<property>
                    <name>webcrawlContentRetrieverFactoryClassName</name>
                    <value>eu.dnetlib.iis.wf.primary.processing.FileContentReturningHttpServiceFacadeFactory</value>
                </property>
                <property>
                    <name>webcrawlLockManagerFactoryClassName</name>
                    <value>eu.dnetlib.iis.common.lock.LockManagerFactoryMock</value>
                </property>
                <property>
                    <name>patentLockManagerFactoryClassName</name>
                    <value>eu.dnetlib.iis.common.lock.LockManagerFactoryMock</value>
                </property>
                <property>
                    <name>software_webcrawl_cache_location</name>
                    <value>${workingDir}/cache/software_webcrawl</value>
                </property>
                <property>
                    <name>patent_cache_location</name>
                    <value>${workingDir}/cache/patent</value>
                </property>
				<property>
					<name>metric_pusher_creator_class_name</name>
					<value>eu.dnetlib.iis.wf.report.pushgateway.process.FilePusherCreator</value>
				</property>
				<property>
					<name>metric_pusher_address</name>
					<value>${workingDir}/report/pushgateway</value>
				</property>
                <property>
                    <name>patentMetadataRetrieverFacadeFactoryClassname</name>
                    <value>eu.dnetlib.iis.wf.primary.processing.FileContentReturningPatentServiceFacadeFactory</value>
                </property>
                <property>
                    <name>patentServiceAuthnConsumerKey</name>
                    <value>expectedConsumerKey</value>
                </property>
                <property>
                    <name>patentServiceAuthnConsumerSecret</name>
                    <value>expectedConsumerSecret</value>
                </property>
                <property>
                    <name>patentServiceEndpointAuthHost</name>
                    <value>expectedAuthHost</value>
                </property>
                <property>
                    <name>patentServiceEndpointAuthPort</name>
                    <value>expectedAuthPort</value>
                </property>
                <property>
                    <name>patentServiceEndpointAuthScheme</name>
                    <value>expectedAuthScheme</value>
                </property>
                <property>
                    <name>patentServiceEndpointAuthUriRoot</name>
                    <value>expectedAuthUriRoot</value>
                </property>
                <property>
                    <name>patentServiceEndpointOpsHost</name>
                    <value>expectedOpsHost</value>
                </property>
                <property>
                    <name>patentServiceEndpointOpsPort</name>
                    <value>expectedOpsPort</value>
                </property>
                <property>
                    <name>patentServiceEndpointOpsScheme</name>
                    <value>expectedOpsScheme</value>
                </property>
                <property>
                    <name>patentServiceEndpointOpsUriRoot</name>
                    <value>expectedOpsUriRoot</value>
                </property>
				<property>
					<name>affiliation_matching_number_of_emitted_files</name>
					<value>1</value>
				</property>
				<property>
					<name>referenceextraction_patent_number_of_emitted_filesa</name>
					<value>1</value>
				</property>
				<property>
					<name>webcrawlNumberOfEmittedFiles</name>
					<value>1</value>
				</property>
			</configuration>
		</sub-workflow>
		<ok to="consumer" />
		<error to="fail" />
	</action>

	<action name="consumer">
		<java>
			<main-class>eu.dnetlib.iis.common.java.ProcessWrapper</main-class>
			<arg>eu.dnetlib.iis.common.java.jsonworkflownodes.TestingConsumer</arg>
			<!-- TODO prepare proper json generated datastores -->
			<arg>-C{document_to_document_classes,
				eu.dnetlib.iis.documentsclassification.schemas.DocumentToDocumentClasses,
				eu/dnetlib/iis/wf/primary/processing/sampledataproducer/output/document_classes.json}
			</arg>
			<arg>-Idocument_to_document_classes=${workingDir}/exported/document_to_document_classes</arg>
			<arg>-C{document_to_dataset,
				eu.dnetlib.iis.referenceextraction.dataset.schemas.DocumentToDataSet,
				eu/dnetlib/iis/wf/primary/processing/sampledataproducer/output/document_to_dataset.json}
			</arg>
			<arg>-Idocument_to_dataset=${workingDir}/exported/document_to_dataset</arg>
			<arg>-C{document_to_project,
				eu.dnetlib.iis.referenceextraction.project.schemas.DocumentToProject,
				eu/dnetlib/iis/wf/primary/processing/sampledataproducer/output/document_to_project.json}
			</arg>
			<arg>-Idocument_to_project=${workingDir}/exported/document_to_project</arg>
			<arg>-C{document_to_research_initiatives,
				eu.dnetlib.iis.export.schemas.DocumentToConceptIds,
				eu/dnetlib/iis/wf/primary/processing/sampledataproducer/output/document_to_research_initiatives.json}
			</arg>
			<arg>-Idocument_to_research_initiatives=${workingDir}/exported/document_to_research_initiatives</arg>
            <arg>-C{document_to_community,
                eu.dnetlib.iis.export.schemas.DocumentToConceptIds,
                eu/dnetlib/iis/wf/primary/processing/sampledataproducer/output/document_to_community.json}
            </arg>
            <arg>-Idocument_to_community=${workingDir}/exported/document_to_community</arg>
            <arg>-C{document_to_covid19,
                eu.dnetlib.iis.export.schemas.DocumentToConceptIds,
                eu/dnetlib/iis/wf/primary/processing/sampledataproducer/output/document_to_covid19.json}
            </arg>
            <arg>-Idocument_to_covid19=${workingDir}/exported/document_to_covid19</arg>
            <arg>-C{document_to_service,
                eu.dnetlib.iis.referenceextraction.service.schemas.DocumentToService,
                eu/dnetlib/iis/wf/primary/processing/sampledataproducer/output/document_to_service.json}
            </arg>
            <arg>-Idocument_to_service=${workingDir}/exported/document_to_service</arg>
            <arg>-C{document_to_software_url_with_meta,
                eu.dnetlib.iis.referenceextraction.softwareurl.schemas.DocumentToSoftwareUrlWithMeta,
                eu/dnetlib/iis/wf/primary/processing/sampledataproducer/output/document_to_software_url_with_meta.json}
            </arg>
            <arg>-Idocument_to_software_url_with_meta=${workingDir}/exported/document_to_software_url_with_meta</arg>
			<arg>-C{document_to_patent,
				eu.dnetlib.iis.referenceextraction.patent.schemas.DocumentToPatent,
				eu/dnetlib/iis/wf/primary/processing/sampledataproducer/output/document_to_patent.json}
			</arg>
			<arg>-Idocument_to_patent=${workingDir}/exported/document_to_patent</arg>
            <arg>-C{patent_metadata,
                eu.dnetlib.iis.referenceextraction.patent.schemas.Patent,
                eu/dnetlib/iis/wf/primary/processing/sampledataproducer/output/extracted_patent_metadata.json}
            </arg>
            <arg>-Ipatent_metadata=${workingDir}/exported/patent_metadata</arg>
			<arg>-C{citation,
				eu.dnetlib.iis.export.schemas.Citations,
				eu/dnetlib/iis/wf/primary/processing/sampledataproducer/output/citations.json}
			</arg>
			<arg>-Icitation=${workingDir}/exported/citation</arg>
			<arg>-C{document_similarity,
				eu.dnetlib.iis.documentssimilarity.schemas.DocumentSimilarity,
				eu/dnetlib/iis/common/data/empty.json}
			</arg>
			<arg>-Idocument_similarity=${workingDir}/exported/document_similarity</arg>
			<arg>-C{matched_organization,
				eu.dnetlib.iis.wf.affmatching.model.MatchedOrganizationWithProvenance,
				eu/dnetlib/iis/wf/primary/processing/sampledataproducer/output/matched_organization.json}
			</arg>
			<arg>-Imatched_organization=${workingDir}/exported/matched_affiliation</arg>
		</java>
		<ok to="report_consumer" />
		<error to="fail" />
	</action>

    <action name="report_consumer">
        <java>
            <main-class>eu.dnetlib.iis.common.java.ProcessWrapper</main-class>
            <arg>eu.dnetlib.iis.common.report.test.ReportTestingConsumer</arg>
            
            <arg>-C{affMatchingReport,eu.dnetlib.iis.common.schemas.ReportEntry,eu/dnetlib/iis/wf/primary/processing/sampledataproducer/output/report/aff-matching.json}</arg>
            <arg>-IaffMatchingReport=${workingDir}/report/aff-matching</arg>

			<arg>-C{affMatchingDedupReport,eu.dnetlib.iis.common.schemas.ReportEntry,eu/dnetlib/iis/wf/primary/processing/sampledataproducer/output/report/aff-matching_dedup.json}</arg>
			<arg>-IaffMatchingDedupReport=${workingDir}/report/affmatching-dedup</arg>

			<arg>-C{affMatchingProjectBasedReport,eu.dnetlib.iis.common.schemas.ReportEntry,eu/dnetlib/iis/wf/primary/processing/sampledataproducer/output/report/aff-matching_project_based.json}</arg>
			<arg>-IaffMatchingProjectBasedReport=${workingDir}/report/project-based-docorg-matching</arg>

			<arg>-C{citationReport,eu.dnetlib.iis.common.schemas.ReportEntry,eu/dnetlib/iis/wf/primary/processing/sampledataproducer/output/report/citation.json}</arg>
            <arg>-IcitationReport=${workingDir}/report/citation</arg>
            
            <arg>-C{citationmatchingDirectReport,eu.dnetlib.iis.common.schemas.ReportEntry,eu/dnetlib/iis/wf/primary/processing/sampledataproducer/output/report/citationmatching_direct.json}</arg>
            <arg>-IcitationmatchingDirectReport=${workingDir}/report/citationmatching_direct</arg>
            
            <arg>-C{citationmatchingFuzzyReport,eu.dnetlib.iis.common.schemas.ReportEntry,eu/dnetlib/iis/wf/primary/processing/sampledataproducer/output/report/citationmatching_fuzzy.json}</arg>
            <arg>-IcitationmatchingFuzzyReport=${workingDir}/report/citationmatching_fuzzy</arg>

			<arg>-C{docCommunityReport,eu.dnetlib.iis.common.schemas.ReportEntry,eu/dnetlib/iis/wf/primary/processing/sampledataproducer/output/report/doc_community.json}</arg>
			<arg>-IdocCommunityReport=${workingDir}/report/doc_community</arg>

            <arg>-C{docResearchInitiativeReport,eu.dnetlib.iis.common.schemas.ReportEntry,eu/dnetlib/iis/wf/primary/processing/sampledataproducer/output/report/doc_research_initiative.json}</arg>
            <arg>-IdocResearchInitiativeReport=${workingDir}/report/doc_research_initiative</arg>

            <arg>-C{docCommunityReport,eu.dnetlib.iis.common.schemas.ReportEntry,eu/dnetlib/iis/wf/primary/processing/sampledataproducer/output/report/document_to_community.json}</arg>
            <arg>-IdocCommunityReport=${workingDir}/report/document_to_community_by_root_conceptid</arg>
            
            <arg>-C{docCovid19Report,eu.dnetlib.iis.common.schemas.ReportEntry,eu/dnetlib/iis/wf/primary/processing/sampledataproducer/output/report/document_to_covid19.json}</arg>
            <arg>-IdocCovid19Report=${workingDir}/report/doc_covid19</arg>
            
            <arg>-C{docServiceReport,eu.dnetlib.iis.common.schemas.ReportEntry,eu/dnetlib/iis/wf/primary/processing/sampledataproducer/output/report/document_to_service.json}</arg>
            <arg>-IdocServiceReport=${workingDir}/report/document_to_service</arg>
            
            <arg>-C{documentClassificationReport,eu.dnetlib.iis.common.schemas.ReportEntry,eu/dnetlib/iis/wf/primary/processing/sampledataproducer/output/report/document_classification.json}</arg>
            <arg>-IdocumentClassificationReport=${workingDir}/report/document_classification</arg>
            
            <arg>-C{documentTextUnionReport,eu.dnetlib.iis.common.schemas.ReportEntry,eu/dnetlib/iis/wf/primary/processing/sampledataproducer/output/report/document_text_union.json}</arg>
            <arg>-IdocumentTextUnionReport=${workingDir}/report/document_text_union</arg>
            
            <arg>-C{documentToDatasetDataciteReport,eu.dnetlib.iis.common.schemas.ReportEntry,eu/dnetlib/iis/wf/primary/processing/sampledataproducer/output/report/document_to_dataset_datacite.json}</arg>
            <arg>-IdocumentToDatasetDataciteReport=${workingDir}/report/document_to_dataset_datacite</arg>
            
            <arg>-C{documentToDatasetOpentrialsReport,eu.dnetlib.iis.common.schemas.ReportEntry,eu/dnetlib/iis/wf/primary/processing/sampledataproducer/output/report/document_to_dataset_opentrials.json}</arg>
            <arg>-IdocumentToDatasetOpentrialsReport=${workingDir}/report/document_to_dataset_opentrials</arg>
            
            <arg>-C{documentToDatasetTotalReport,eu.dnetlib.iis.common.schemas.ReportEntry,eu/dnetlib/iis/wf/primary/processing/sampledataproducer/output/report/document_to_dataset_total.json}</arg>
            <arg>-IdocumentToDatasetTotalReport=${workingDir}/report/document_to_dataset_total</arg>
            
            <arg>-C{documentToProjectFunderReport,eu.dnetlib.iis.common.schemas.ReportEntry,eu/dnetlib/iis/wf/primary/processing/sampledataproducer/output/report/document_to_project_by_funder.json}</arg>
            <arg>-IdocumentToProjectFunderReport=${workingDir}/report/document_to_project_by_funder</arg>

            <arg>-C{docSoftwareUrlWebcrawlReport,eu.dnetlib.iis.common.schemas.ReportEntry,eu/dnetlib/iis/wf/primary/processing/sampledataproducer/output/report/doc_softwareurl_webcrawl.json}</arg>
            <arg>-IdocSoftwareUrlWebcrawlReport=${workingDir}/report/referenceextraction_software</arg>

            <arg>-C{patentMetadataRetrieval,eu.dnetlib.iis.common.schemas.ReportEntry,eu/dnetlib/iis/wf/primary/processing/sampledataproducer/output/report/doc_patent_metadata_retrieval.json}</arg>
            <arg>-IpatentMetadataRetrieval=${workingDir}/report/patent_metadata_retrieval</arg>
            
            <arg>-C{patentMetadataExtraction,eu.dnetlib.iis.common.schemas.ReportEntry,eu/dnetlib/iis/wf/primary/processing/sampledataproducer/output/report/doc_patent_metadata_extraction.json}</arg>
            <arg>-IpatentMetadataExtraction=${workingDir}/report/patent_metadata_extraction</arg>

            <arg>-C{execTimeReport,eu.dnetlib.iis.common.schemas.ReportEntry,eu/dnetlib/iis/wf/primary/processing/sampledataproducer/output/report/primary-processing-execution-times.json}</arg>
            <arg>-IexecTimeReport=${workingDir}/report/primary-processing-execution-times</arg>

			<arg>-C{pushgateway,eu.dnetlib.iis.common.schemas.ReportEntry,eu/dnetlib/iis/wf/primary/processing/sampledataproducer/output/report/pushgateway.json}</arg>
			<arg>-Ipushgateway=${workingDir}/report/pushgateway/iis</arg>
		</java>
        <ok to="end" />
        <error to="fail" />
    </action>

	<kill name="fail">
		<message>Unfortunately, the process failed -- error message:
			[${wf:errorMessage(wf:lastErrorNode())}]
		</message>
	</kill>
	<end name="end" />
</workflow-app>
